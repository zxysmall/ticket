<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.yy</groupId>
	<artifactId>ticket</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>ticket Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<!-- spring boot parent节点，引入这个之后，在下面和spring boot相关的就不需要引入版本了; -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
	</parent>
	<dependencies>
		<!-- web支持: 1、web mvc; 2、restful; 3、jackjson支持; 4、aop ........ -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- servlet 依赖. -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<!-- 
			JSTL（JSP Standard Tag Library，JSP标准标签库)是一个不断完善的开放源代码的JSP标签库，是由apache的jakarta小组来维护的。JSTL只能运行在支持JSP1.2和Servlet2.3规范的容器上，如tomcat 4.x。在JSP 2.0中也是作为标准支持的。
			不然报异常信息：
			javax.servlet.ServletException: Circular view path [/helloJsp]: would dispatch back to the current handler URL [/helloJsp] again. Check your ViewResolver setup! (Hint: This may be the result of an unspecified view, due to default view name generation.)
		 -->
		<!-- tomcat 的支持.-->
		<dependency> 
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- 内嵌tomcat的支持. -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>jstl</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
		</dependency>
		<!--spring-boot-configuration:spring boot 配置处理器; -->
       <dependency>
           <groupId>org.springframework.boot</groupId>
           <artifactId>spring-boot-configuration-processor</artifactId>
           <optional>true</optional>
       </dependency>
       <dependency>
       		<groupId>mysql</groupId>
       		<artifactId>mysql-connector-java</artifactId>
		</dependency> 
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.0.18</version>
		</dependency>
		<!--   
           spring-boot mybatis依赖：
          	 请不要使用1.0.0版本，因为还不支持拦截器插件，
         -->
	    <dependency>
	        <groupId>org.mybatis.spring.boot</groupId>
	        <artifactId>mybatis-spring-boot-starter</artifactId>
	        <version>1.1.1</version>
	    </dependency>
		<!-- 
        MyBatis提供了拦截器接口，我们可以实现自己的拦截器，
        	将其作为一个plugin装入到SqlSessionFactory中。
       	Github上有位开发者写了一个分页插件，我觉得使用起来还可以，挺方便的。
     	-->   
	   <!--分页插件-->  
		<dependency>  
		      <groupId>com.github.pagehelper</groupId>  
		      <artifactId>pagehelper-spring-boot-starter</artifactId>  
		      <version>1.0.0</version>  
		</dependency>  
	    
	    <!-- Spirng data JPA依赖; -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
	    
	    <!-- shiro spring. -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>1.3.2</version>
		</dependency>
		
		<!-- shiro ehcache -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-ehcache</artifactId>
			<version>1.3.2</version>
		</dependency>
		<!-- 
		           包含支持UI模版（Velocity，FreeMarker，JasperReports），
		           邮件服务，
		           脚本服务(JRuby)，
		           缓存Cache（EHCache），
		           任务计划Scheduling（uartz）。
		        -->
	       <dependency>
	          <groupId>org.springframework</groupId>
	          <artifactId>spring-context-support</artifactId>
	        </dependency>
	     
		 <dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.8</version>
		</dependency>
<!-- 		<dependency> -->
<!-- 			 <groupId>org.springframework.boot</groupId> -->
<!-- 			 <artifactId>spring-boot-devtools</artifactId> -->
<!-- 			 <optional>true</optional> 这个需要为 true 热部署才有效 -->
<!-- 		</dependency> -->
	</dependencies>
	<profiles>
        <profile>
            <!-- 生产环境 -->
            <id>prod</id>
            <properties>
                <profiles.active>prod</profiles.active>
                <application.version>1.0</application.version>
                <logback.dir>/data/logs/ticket</logback.dir>
            </properties>
        </profile>
        <profile>
            <!-- 本地开发环境 -->
            <id>dev</id>
            <properties>
                <profiles.active>dev</profiles.active>
                <application.version>1.0</application.version>
                <logback.dir>D:/logbacktest</logback.dir>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <!-- 测试环境 -->
            <id>test</id>
            <properties>
                <profiles.active>test</profiles.active>
                <application.version>1.0</application.version>
                <logback.dir>/data/logs/ticket</logback.dir>
            </properties>
        </profile>
    </profiles>
	<build>
		<finalName>ticket</finalName>
		<pluginManagement>
			<plugins>
				<!-- Ignore/Execute plugin execution -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<!-- copy-dependency plugin -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>  
			    <groupId>org.apache.maven.plugins</groupId>  
			    <artifactId>maven-surefire-plugin</artifactId>  
			    <configuration>  
			        <skip>true</skip>  
			    </configuration>  
			</plugin> 
			<plugin>
			     <groupId>org.apache.maven.plugins</groupId>
			     <artifactId>maven-resources-plugin</artifactId>
			     <configuration>                                                
			       <useDefaultDelimiters>false</useDefaultDelimiters>      
			         <delimiters>
			            <delimiter>$[*]</delimiter>
			        </delimiters>
			       <encoding>UTF-8</encoding>
			    </configuration>
			</plugin>
			<plugin>  
			    <groupId>org.springframework.boot</groupId>  
			    <artifactId>spring-boot-maven-plugin</artifactId>  
				<configuration>
			        <executable>true</executable>
			      </configuration>
			</plugin> 
		</plugins>
		<resources>
			<resource>
					<directory>src/main/resources</directory>
					<excludes>
						<exclude>**/*.properties</exclude>
					</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
<!-- 					<include>**/application-${profiles.active}.properties</include> -->
					<include>**/application.properties</include>
					<include>**/logback.xml</include>
					<include>**/banner.txt</include>
				</includes>
			</resource>
		</resources>
	</build>
</project>
